{
	"info": {
		"_postman_id": "798ee34b-f204-42d0-a2ff-8465d7c572e8",
		"name": "notes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Log in as admin",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"jwtToken\", json.access);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admina\",\n    \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/auth/token/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in as admin2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"jwtToken\", json.access);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin2\",\n    \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/auth/token/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"lastNoteId\", json.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"body\": \"Test note\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/notes/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"notes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/ with user_id 1 (user_id param should be ignored, JWT token's user ID should be used instead)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"lastNoteId\", json.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"body\": \"Test note\",\n    \"user_id\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/notes/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"notes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/",
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "payload",
							"value": "{}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "localhost:8000/api/notes",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/?fromDate={{startOfToday}}&tillDate={{now}}",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const startOfToday = new Date();",
							"startOfToday.setHours(0);",
							"startOfToday.setMinutes(0);",
							"startOfToday.setSeconds(0);",
							"pm.environment.set(\"startOfToday\", startOfToday);",
							"",
							"const tomorrow = new Date();",
							"tomorrow.setDate(tomorrow.getDate() + 1);",
							"pm.environment.set(\"startOfTomorrow\", startofTomorrow);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "payload",
							"value": "{}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "localhost:8000/api/notes/?fromDate={{startOfToday}}&tillDate={{tomorrow}}",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"notes",
						""
					],
					"query": [
						{
							"key": "fromDate",
							"value": "{{startOfToday}}"
						},
						{
							"key": "tillDate",
							"value": "{{tomorrow}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/{{lastNoteId}}/ (most recently created note)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/notes/{{lastNoteId}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"notes",
						"{{lastNoteId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/stats",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/notes/{{lastNoteId}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"notes",
						"{{lastNoteId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/notes/{{lastNoteId}}/ (delete most recently created note)",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/notes/{{lastNoteId}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"notes",
						"{{lastNoteId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/api/notes/{{lastNoteId}}/",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"randomBody\", (Math.random() + 1).toString(36).substring(7));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"body\": \"{{randomBody}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/notes/{{lastNoteId}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"notes",
						"{{lastNoteId}}",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwtToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}